// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id              String   @id @default(uuid())
  firstname       String
  lastname        String
  username        String   @unique
  email           String   @unique
  password        String
  profile_picture String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  GamesAsPlayer1 Games[] @relation("player1")
  GamesAsPlayer2 Games[] @relation("player2")

  GamesWon Games[]
}

model Games {
  id         String @id @default(uuid())
  id_player1 String
  id_player2 String
  player1    Users  @relation("player1", fields: [id_player1], references: [id])
  player2    Users  @relation("player2", fields: [id_player2], references: [id])

  winnerId String? //optionnel parce que la partie peut ne pas être terminé lorsqu'elle est enregistrer
  winner   Users?  @relation(fields: [winnerId], references: [id]) // également optionnel pour les memes raisons

  status    String //exemple : "waiting", "in_progress", "finished" voir pour faire une enum peut etre
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  boardGame Json //le json de la partie faut que je fasse un json d'exemple
}
